{"version":3,"sources":["components/UI/Loader/Spinner/Spinner.module.scss","components/Header/Header.module.css","components/common/FormControls/FormContrrols.module.css","components/Profile/MyPosts/Post/Posts.module.css","components/Profile/ProfileComponent.module.css","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Users/Users.module.scss","redux/profileReducer.ts","redux/dialogReducer.ts","components/Dialogs/usersDialog/UsersDialog.tsx","components/Dialogs/ChatMessage/ChatMessage.tsx","components/common/FormControls/FormContrrols.tsx","utils/Validators/Validator.ts","components/Dialogs/Dialogs.tsx","HOC/RedirectHoc.tsx","components/Dialogs/DialogsContainer.tsx","components/Profile/MyPosts/Post/Posts.tsx","components/Profile/MyPosts/MyPosts.tsx","components/UI/Loader/Spinner/Spinner.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/ProfileComponent.tsx","API/API.ts","redux/usersReducer.ts","components/Profile/ProfileComponentContainer.tsx","redux/authReducer.ts","assets/image/react-javascript-library-redux-user-interface-tesseract.jpg","components/Users/Users.tsx","redux/usersSelector.ts","components/Users/UsersContainer.tsx","redux/appReducer.ts","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","serviceWorker.ts","redux/reduxStore.ts","index.tsx","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/ChatMessage/ChatMessage.module.css","components/Dialogs/usersDialog/UsersDialog.module.css"],"names":["module","exports","ACTION_TYPE","initialState","dialogs","id","v1","name","messages","message","dialogReducer","state","action","type","newMes","UsersDialog","props","personLoaded","map","className","s","item","avatar","to","names","dialog_items","ChatMessage","messageDial","wrap","person","person_img","alt","src","person_title","text","TextAreaFom","input","ControllForm","meta","children","hasError","touched","error","formControl","Input","restProps","requiredField","value","maxLength","length","InputVAl","DialogsFormRedux","reduxForm","form","onSubmit","handleSubmit","title_form","Field","textarea","component","validate","btn_dialog","Dialogs","wrapper","line","textarea_head","formData","trim","callBackAddTask","RedirectHoc","Wrapper","useSelector","auth","isAuth","connector","connect","dialogPage","dispatch","addMessageActionCreator","compose","Posts","postVie","posts","likeCount","classes","maxLengthVal","MyPosts","React","memo","useState","setError","style","content","head","post","title","MyPostsFormRedux","myPosts","AddTask","placeholder","btnForm","Spinner","arrStyle","i","push","Fragment","my_loader","loader","inx","loader_span","ProfileStatus","editMode","setEditMode","status","setTitle","setValue","onChange","e","currentTarget","onChangeTitle","onKeyDown","key","onTitleKeyHandler","onBlur","updateStatus","onDoubleClick","ProfileInfo","console","log","profile","loading","fullName","photos","aboutMe","contacts","lookingForAJob","lookingForAJobDescription","user","avatar_wrapper","small","user_prof","desc","contact","contact_title","contact_descr","facebook","vk","jobs","jobs_wrapper","jobs_title","jobs_bull","jobs_desr","ProfileComponent","userId","this","match","params","data","toString","SetUserProfileThunk","setProfileStatusThunk","updateProfileStatusThunk","Component","configOMB","withCredentials","baseURL","headers","axiosInstance","axios","create","API","getUsers","currentPage","pageSize","a","get","then","res","Unfollow","UserId","delete","Follow","UserData","authMe","login","email","password","rememberMy","logOut","ProfileAPI","put","undefined","newPostText","SetProfileStatus","SET_PROFILE_STATUS","setProfileLoading","SET_PROFILE_LOADING","profileReducer","ADD_POST","newPost","SET_USER","profilePage","resultCode","withRouter","users","totalUsersCount","followIsProgress","toggleLoading","TOGGLE_LOADING","toggleFollowProgress","TOGGLE_FOLLOW_PROGRESS","usersReducer","FOLLOW","followed","UNFOLLOW","SET_USERS","SET_TOTAL_COUNT","totalCount","SET_CURRENT_PAGE","filter","Users","pagesCount","Math","ceil","pages","list_users","p","selectPage","onClick","onPageChanged","random","Users_item","img_wrapper","img","follow","disabled","some","unFollowThunk","followThunk","mes_wrapper","name_wrapper","city_wrapper","country","city","getPageSize","usersPage","getTotalUsersCount","getCurrentPage","getLoading","getFollowIsProgress","getUserSuper","createSelector","u","UsersAPIComponent","pageNum","unFollow","setCurrentPage","items","SetUserData","SET_USER_DATA","SetUserDataThunk","AuthReducer","Header","useDispatch","login_block","login_name","log_out","ExportOutlined","HeaderContainer","LoginReduxForm","Login","rememberMe","stopSubmit","initialized","Layout","Sider","Content","App","collapsed","toggle","setState","InitializeApp","trigger","MenuFoldOutlined","collapsible","theme","mode","defaultSelectedKeys","Item","icon","UserOutlined","CommentOutlined","TeamOutlined","background","createElement","MenuUnfoldOutlined","margin","padding","minHeight","path","render","ProfileComponentContainer","exact","UsersContainer","app","result","SET_INITIALIZED","Boolean","window","location","hostname","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunk","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.244601a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_loader\":\"Spinner_my_loader__2CzZS\",\"animateBg\":\"Spinner_animateBg__3ofeo\",\"loader\":\"Spinner_loader__1ffBO\",\"animates\":\"Spinner_animates__3C9ME\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_block\":\"Header_login_block__1hnox\",\"img\":\"Header_img__2T7Ru\",\"login_name\":\"Header_login_name__YlBuN\",\"log_out\":\"Header_log_out__1EriH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormContrrols_formControl__3KuHY\",\"error\":\"FormContrrols_error__vjXfR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__1RnoC\",\"message\":\"Posts_message__19Mzt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileComponent_content__2MTFp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_header_img\":\"ProfileInfo_content_header_img__3pP2L\",\"user\":\"ProfileInfo_user__2c-pt\",\"avatar_wrapper\":\"ProfileInfo_avatar_wrapper__gLD5l\",\"avatar\":\"ProfileInfo_avatar__2sK1K\",\"user_prof\":\"ProfileInfo_user_prof__3Pe0A\",\"name\":\"ProfileInfo_name__2aiRd\",\"desc\":\"ProfileInfo_desc__1cw96\",\"contact\":\"ProfileInfo_contact__il_j2\",\"contact_title\":\"ProfileInfo_contact_title__2PQdX\",\"jobs\":\"ProfileInfo_jobs__15HaM\",\"jobs_wrapper\":\"ProfileInfo_jobs_wrapper__31-mI\",\"jobs_title\":\"ProfileInfo_jobs_title__2ZoeX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__3-inL\",\"Users_item\":\"Users_Users_item__GHLn5\",\"img_wrapper\":\"Users_img_wrapper__y7LAn\",\"img\":\"Users_img__8OKTI\",\"follow\":\"Users_follow__1xdIa\",\"mes_wrapper\":\"Users_mes_wrapper__16Y7W\",\"name_wrapper\":\"Users_name_wrapper__3-Qed\",\"status\":\"Users_status__1b_3Y\",\"city_wrapper\":\"Users_city_wrapper__3pouO\",\"city\":\"Users_city__GmHCV\",\"selectPage\":\"Users_selectPage__2dHPD\",\"list_users\":\"Users_list_users__rtXoQ\"};","import {v1} from \"uuid\";\r\nimport {ProfileAPI} from \"../API/API\";\r\nimport {AppThunk} from \"./reduxStore\";\r\n\r\n\r\nexport enum ACTION_TYPE {\r\n    ADD_POST = 'SOC/PROFILE/ADD_POST',\r\n    SET_USER = 'SOC/PROFILE/SET_USER',\r\n    SET_PROFILE_STATUS = 'SET_PROFILE_STATUS',\r\n    SET_PROFILE_LOADING= 'SET_PROFILE_LOADING',\r\n}\r\n\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string\r\n        website?: string\r\n        vk: string\r\n        twitter: string\r\n        instagram: string\r\n        youtube?: string\r\n        github: string\r\n        mainLink?: string\r\n    },\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: {\r\n        small?: string\r\n        large?: string\r\n    }\r\n}\r\nconst initialState = {\r\n    posts: [\r\n        {id: v1(), message: 'Hi, how you', likeCount: 2},\r\n        {id: v1(), message: 'Bro learn React', likeCount: 5},\r\n        {id: v1(), message: 'Blooo', likeCount: 1},\r\n        {id: v1(), message: 'Learn run', likeCount: 14}\r\n    ],\r\n    profile: undefined,\r\n    newPostText: 'hello',\r\n    status: '',\r\n    loading: false\r\n}\r\ntype PostType = {\r\n    id: string\r\n    message: string\r\n    likeCount: number\r\n}\r\ntype ProfilePageType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    profile: ProfileType | undefined\r\n    status: string\r\n    loading: boolean\r\n}\r\n\r\nconst profileReducer = (state: ProfilePageType = initialState, action: any): ProfilePageType => {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case ACTION_TYPE.ADD_POST:\r\n            const newPost = {id: v1(), message: action.value, likeCount: 0};\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        case ACTION_TYPE.SET_USER:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case ACTION_TYPE.SET_PROFILE_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case ACTION_TYPE.SET_PROFILE_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const AddTask = (value: string) => ({type: ACTION_TYPE.ADD_POST, value})\r\nexport const SetUserProfile = (profile: ProfileType) => ({type: ACTION_TYPE.SET_USER, profile})\r\nexport const SetProfileStatus = (status: string) => ({type:ACTION_TYPE.SET_PROFILE_STATUS, status})\r\nexport const setProfileLoading = (loading:boolean) => ({type:ACTION_TYPE.SET_PROFILE_LOADING, loading})\r\n\r\nexport type ProfileACTypes =\r\n    ReturnType<typeof AddTask>\r\n    | ReturnType<typeof SetUserProfile>\r\n    | ReturnType<typeof SetProfileStatus>\r\n    | ReturnType<typeof setProfileLoading>\r\n\r\n\r\n\r\n\r\nexport const SetUserProfileThunk = (userId: string):AppThunk => (dispatch) => {\r\n    dispatch(setProfileLoading(true))\r\n    ProfileAPI.setUsersProfile(userId).then(res => {\r\n        console.log(res)\r\n        dispatch(setProfileLoading(false))\r\n        dispatch(SetUserProfile(res))\r\n    })\r\n}\r\n\r\nexport  const setProfileStatusThunk = (userId: string):AppThunk => (dispatch) => {\r\n    dispatch(setProfileLoading(true))\r\n    ProfileAPI.getStatus(userId).then(res => {\r\n        console.log(res)\r\n        dispatch(SetProfileStatus(res.data))\r\n        dispatch(setProfileLoading(false))\r\n    })\r\n}\r\nexport  const updateProfileStatusThunk = (status: string):AppThunk => (dispatch) => {\r\n    dispatch(setProfileLoading(true))\r\n    ProfileAPI.updateStatus(status).then(res => {\r\n        if(res.data.resultCode === 0 ) {\r\n            dispatch(setProfileLoading(false))\r\n            dispatch(SetProfileStatus(status))\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport default profileReducer;","import {DialogPageType} from './store';\r\nimport {v1} from \"uuid\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type DialogDispatchType = Dispatch<ActionType>\r\nexport type ActionType =\r\n    addMessageActionCreatorType;\r\n\r\n\r\nexport type addMessageActionCreatorType = {\r\n    type: \"ADD-MES\",\r\n    message: string\r\n}\r\nconst initialState = {\r\n    dialogs:[\r\n        {id:v1(), name:'Yuri'},\r\n        {id:v1(), name:'Grish'},\r\n        {id:v1(), name:'Masha'},\r\n        {id:v1(), name:'Petro'},\r\n        {id:v1(), name:'dds'},\r\n        {id:v1(), name:'Ula'}\r\n    ],\r\n    messages:[\r\n        {id:v1(), message:'Hi'},\r\n        {id:v1(), message:'Bro'},\r\n        {id:v1(), message:'Buy'},\r\n        {id:v1(), message:'Ear'},\r\n        {id:v1(), message:'Pop'}\r\n    ]\r\n}\r\n\r\nconst dialogReducer = (state: DialogPageType = initialState, action: ActionType):DialogPageType  => {\r\n    switch(action.type){\r\n        case \"ADD-MES\":\r\n            const newMes = {id: v1(), message: action.message};\r\n            return {...state, messages:[...state.messages, newMes]}\r\n        default: return state\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport const addMessageActionCreator = (value: string):addMessageActionCreatorType => {\r\n    return {\r\n        type: \"ADD-MES\",\r\n        message: value\r\n    }\r\n}\r\n\r\nexport default dialogReducer;","import React from \"react\";\r\nimport s from \"./UsersDialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogType} from \"../../../redux/store\";\r\n\r\ntype UsersDialogType = {\r\n    dialogs: Array<DialogType>\r\n}\r\n\r\nconst UsersDialog = (props:UsersDialogType) => {\r\n\r\n    const personLoaded  =  props.dialogs.map(({name, id}) => {\r\n        return (\r\n            <div key={id} className={s.item}>\r\n                <div className={s.avatar}> </div>\r\n                <NavLink to={'/dialogs/' + id}> {name}</NavLink>\r\n            </div>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <div className={s.names}>\r\n            <div className={s.dialog_items}>\r\n                {personLoaded}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersDialog;","import React from \"react\";\r\nimport s from \"./ChatMessage.module.css\";\r\nimport {MessageType} from \"../../../redux/store\";\r\n\r\ntype ChatMessageType = {\r\n    messages: Array<MessageType>\r\n}\r\n\r\n\r\n\r\nconst ChatMessage = (props:ChatMessageType) => {\r\n    const avaUrl = 'https://yt3.ggpht.com/a-/AAuE7mCbfWojLQOCaK9L9GFGYos67xBELhYnV0Rcuw=s800-mo-c-c0xffffffff-rj-k-no'\r\n    const messageDial = props.messages.map(({id, message}) => {\r\n        return(\r\n            <div key={id} className={s.wrap}>\r\n                <div className={s.person}>\r\n                    <div className={s.person_img}><img alt='ava' src={avaUrl}/></div>\r\n                    <div className={s.person_title}>My</div>\r\n                </div>\r\n                <div className={s.text}>{message}</div>\r\n\r\n            </div>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <div className={s.message}>\r\n            {messageDial}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatMessage;","import React from \"react\";\r\nimport s from  './FormContrrols.module.css'\r\nexport const TextAreaFom = ({input, ...props}:any) => {\r\n    return (\r\n        <ControllForm {...props}><textarea {...input} {...props}/></ControllForm>\r\n    )\r\n}\r\n\r\n\r\nconst ControllForm = (props:any) => {\r\n    const {meta,children } = props;\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl  + \" \" + (hasError ? s.error : '')}>\r\n            <div>{children}</div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Input = (props:any) => {\r\n    const {input, ...restProps} = props\r\n    return (\r\n        <ControllForm {...props}><input {...input} {...restProps}/></ControllForm>\r\n    )\r\n}\r\n\r\n\r\n","export const requiredField = (value:string) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLength = (length:number) => (value:string) => {\r\n    if (value && value.length > length) return `Max length ${length} symbols`\r\n    return undefined\r\n\r\n}","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport UsersDialog from \"./usersDialog/UsersDialog\";\r\nimport ChatMessage from \"./ChatMessage/ChatMessage\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {TextAreaFom} from \"../common/FormControls/FormContrrols\";\r\nimport {maxLength, requiredField} from \"../../utils/Validators/Validator\";\r\nimport {PropsDialogsFromRedux} from \"./DialogsContainer\";\r\n\r\ntype FormDataTypeDia = {\r\n    dialogs: string\r\n}\r\n\r\nconst InputVAl = maxLength(10);\r\nconst Dialogs = (props: PropsDialogsFromRedux) => {\r\n\r\n    const callBackAddTask = (formData: FormDataTypeDia) => {\r\n        if (formData.dialogs.trim() !== '') {\r\n            props.callBackAddTask(formData.dialogs)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.wrapper}>\r\n                <UsersDialog dialogs={props.dialogs}/>\r\n                <div className={s.line}/>\r\n                <ChatMessage messages={props.messages}/>\r\n            </div>\r\n\r\n            <div className={s.textarea_head}>\r\n                <DialogsFormRedux onSubmit={callBackAddTask}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DialogsForm: React.FC<InjectedFormProps<FormDataTypeDia>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.title_form}>\r\n            <Field\r\n                name={'dialogs'}\r\n                className={s.textarea}\r\n                component={TextAreaFom}\r\n                validate={[requiredField, InputVAl]}\r\n            >\r\n\r\n            </Field>\r\n            <button className={`btn btn-success  ${s.btn_dialog}`}>Add MES</button>\r\n        </form>\r\n    )\r\n}\r\nconst DialogsFormRedux = reduxForm<FormDataTypeDia>({\r\n    form: \"dialogs\"\r\n})(DialogsForm)\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router\";\r\nimport {AppStateType} from \"../redux/reduxStore\";\r\nimport { useSelector} from \"react-redux\";\r\n\r\n\r\n\r\nconst RedirectHoc = (Wrapper:any) => {\r\n\r\n    const ConnectedRed: (props: any) => (JSX.Element) = (props:any) => {\r\n        const {auth:{isAuth}} = useSelector((state:AppStateType) => state)\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Wrapper{...props}/>\r\n    }\r\n    return ConnectedRed\r\n}\r\n\r\nexport default RedirectHoc","\r\nimport {addMessageActionCreator, DialogDispatchType} from \"../../redux/dialogReducer\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport RedirectHoc from \"../../HOC/RedirectHoc\";\r\nimport {compose} from \"redux\";\r\nimport {ComponentType} from \"react\";\r\n\r\nconst mapStateToProps = (state:AppStateType) => {\r\n    return {\r\n        dialogs: state.dialogPage.dialogs,\r\n        messages: state.dialogPage.messages\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:DialogDispatchType) => {\r\n    return {\r\n        callBackAddTask: (value:string) => {\r\n            if (value.trim() !== ''){\r\n                dispatch(addMessageActionCreator(value));\r\n            }\r\n        }\r\n    }\r\n}\r\nexport type PropsDialogsFromRedux = ConnectedProps<typeof connector>\r\nconst connector =connect(mapStateToProps, mapDispatchToProps)\r\n\r\nexport default compose<ComponentType>(\r\n    connector,\r\n    RedirectHoc)(Dialogs)","import React from \"react\";\r\nimport classes from './Posts.module.css'\r\n\r\nimport {PostType} from '../../../../redux/store'\r\n\r\ntype MyPostsType = {\r\n    posts:Array<PostType>    \r\n    \r\n}\r\n\r\n\r\nconst Posts = (props: MyPostsType) => {\r\n    \r\n    const postVie = props.posts.map(({message, likeCount, id}) => {\r\n        return (\r\n            <div key={id}>\r\n                <div className={classes.item}>\r\n                    <img alt='ava' src='https://million-wallpapers.ru/wallpapers/5/51/424703866779568/nejtiri-2017-avatara-2.jpg'/>\r\n                    <span className={classes.message}>{message}</span>\r\n                </div>\r\n                <div>\r\n                    <span> {likeCount} like </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {postVie}\r\n        </div>\r\n    )\r\n}\r\nexport default Posts;","import React, {useState} from \"react\";\r\nimport Posts from \"./Post/Posts\";\r\nimport style from './MyPosts.module.css';\r\nimport {ProfileComponentType} from \"../ProfileComponent\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {requiredField, maxLength} from \"../../../utils/Validators/Validator\";\r\nimport {TextAreaFom} from \"../../common/FormControls/FormContrrols\";\r\n\r\n\r\nconst maxLengthVal = maxLength(10);\r\n\r\ninterface MyPostsType extends ProfileComponentType  {\r\n\r\n\r\n}\r\ntype FormDataTypePost = {\r\n    myPosts:string\r\n}\r\nconst MyPosts = React.memo((props:MyPostsType) => {\r\n    const [error, setError] = useState<string | null>(null)\r\n\r\n\r\n    const callBackAddTask = ({myPosts = ''}:FormDataTypePost) => {\r\n\r\n        if (myPosts.trim() !== ''){\r\n            props.AddTask(myPosts)\r\n            setError(null)\r\n        } else {\r\n            setError('Title is required')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <div className={style.head}>\r\n                <div className={style.post}>\r\n                    <span className={style.title}>My post</span>\r\n                    <MyPostsFormRedux onSubmit={callBackAddTask} />\r\n                    {error && <div className={style.error}>{error}</div>}\r\n            </div>\r\n            </div>\r\n            <Posts posts={props.posts}/>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst MyPostsForm:React.FC<InjectedFormProps<FormDataTypePost>> = (props) => {\r\n    return (\r\n        <form className={style.input + \" input-group mb-3\"} onSubmit={props.handleSubmit}>\r\n            <Field\r\n                type=\"text\" className=\"form-control\"\r\n                name={'myPosts'}\r\n                component={TextAreaFom}\r\n                validate={[requiredField, maxLengthVal]}\r\n                placeholder={'test'}\r\n            />\r\n            <div className=\"input-group-append d-flex\">\r\n                <button\r\n                    className={'btn btn-success ' + style.btnForm}\r\n                    >Add Post\r\n                </button>\r\n\r\n            </div>\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\nconst MyPostsFormRedux = reduxForm<FormDataTypePost>({\r\n    form: 'myPosts'\r\n})(MyPostsForm)\r\nexport default MyPosts;","import React from \"react\";\r\nimport s from './Spinner.module.scss';\r\n\r\nconst Spinner = () => {\r\n\r\n    let arrStyle = [];\r\n    for (let i = 1; i < 21; i++) {\r\n        arrStyle.push({\"--i\": i} as React.CSSProperties)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <section className={s.my_loader}>\r\n                <div className={s.loader}>\r\n                    {\r\n                        arrStyle.map((item, inx) => {\r\n                            return <span style={item} key={inx} className={s.loader_span}/>\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\n\r\ninterface ProfileStatusProps {\r\n    status: string\r\n    updateStatus: (status:string)=>  void\r\n}\r\n\r\nconst ProfileStatus: React.FC<ProfileStatusProps> = (props) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [title, setTitle] = useState<string>(props.status)\r\n    const [value, setValue] = useState<string>(title)\r\n    const onTitleKeyHandler = (e:KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\"){\r\n            setEditMode(false)\r\n        }\r\n    }\r\n    const onBlurHandler = () => {\r\n\r\n        props.updateStatus(value)\r\n        setEditMode(false)\r\n        setTitle(value)\r\n    }\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const onChangeTitle = (e:ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                editMode\r\n                    ? <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={value}\r\n                            onChange={(e) => onChangeTitle(e)}\r\n                        onKeyDown={(e) => onTitleKeyHandler(e)}\r\n                        onBlur={onBlurHandler}/>\r\n                    </div>\r\n                    : <div>\r\n                        <span onDoubleClick={activateEditMode}>{title}</span>\r\n                    </div>\r\n\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport style from './ProfileInfo.module.scss'\r\nimport {ProfileType} from '../../../redux/profileReducer';\r\nimport Spinner from \"../../UI/Loader/Spinner/Spinner\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\ninterface ProfileInfoProps {\r\n    profile?: ProfileType\r\n    status: string\r\n    updateStatus: (status:string)=>  void\r\n    loading: boolean\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoProps) => {\r\n    console.log(props)\r\n    console.log(props.status)\r\n    if (!props.profile ) {\r\n        return <Spinner/>\r\n    }\r\n    if (props.loading ) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    const {fullName, photos, aboutMe, contacts, lookingForAJob, lookingForAJobDescription} = props.profile\r\n    return (\r\n        <>\r\n            {/*<div className={style.content_header_img}>*/}\r\n\r\n            {/*</div>*/}\r\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            <div className={style.user}>\r\n                <div className={style.avatar_wrapper}>\r\n                    <div className={style.avatar}>\r\n                        <img src={photos.small} alt=\"avatar\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={style.user_prof}>\r\n                    <div className={style.name}>{fullName}</div>\r\n                    <div className={style.status}>{aboutMe}</div>\r\n                    <div className={style.desc}>\r\n                        <div className={style.contact}>\r\n                            <div className={style.contact_title}>facebook:</div>\r\n                            <div className={style.contact_descr}>{contacts.facebook}</div>\r\n                        </div>\r\n                        <div className={style.contact}>\r\n                            <div className={style.contact_title}>vk:</div>\r\n                            <div className={style.contact_descr}>{contacts.vk}</div>\r\n                        </div>\r\n                        <div className={style.jobs}>\r\n                            <div className={style.jobs_wrapper}>\r\n                                <div className={style.jobs_title}>В поисках работы</div>\r\n                                <div className={style.jobs_bull}>{lookingForAJob? 'ИЩУ' : \"НЕТ\"}</div>\r\n                            </div>\r\n                            <div className={style.jobs_desr}>{lookingForAJobDescription}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo","import React, {Component} from \"react\";\r\nimport classes from './ProfileComponent.module.css'\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {RouteComponentProps} from \"react-router\";\r\nimport {PropsProfileFromRedux} from \"./ProfileComponentContainer\";\r\nimport Spinner from \"../UI/Loader/Spinner/Spinner\";\r\n\r\n\r\nexport interface ProfileComponentType extends   PropsProfileFromRedux, RouteComponentProps<MatchParams>{\r\n}\r\n\r\ninterface MatchParams {\r\n    userId: string\r\n}\r\n\r\nexport default class ProfileComponent extends Component<ProfileComponentType, any> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        console.log(userId)\r\n        if (!userId) {\r\n\r\n            if (this.props.isAuth.data.id) {\r\n                userId = this.props.isAuth.data.id.toString();\r\n            } else  {\r\n                userId = '13024';\r\n            }\r\n        }\r\n        this.props.SetUserProfileThunk(userId)\r\n\r\n        this.props.setProfileStatusThunk(userId)\r\n\r\n    }\r\n\r\n    render() {\r\n        if(this.props.loading) {\r\n            return <Spinner/>\r\n        }\r\n        return (\r\n            <div className={classes.content}>\r\n                <ProfileInfo\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus = {this.props.updateProfileStatusThunk}\r\n                    loading={this.props.loading}\r\n                />\r\n                <MyPosts\r\n\r\n                    {...this.props}\r\n                />\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n\r\n}\r\n","import axios from 'axios';\r\n\r\n\r\nconst key = \"34263072-624d-43a5-8a5f-75afa7ad4af4\";\r\nconst configOMB = {\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": key\r\n    }\r\n};\r\n\r\nconst axiosInstance = axios.create(configOMB);\r\n\r\n\r\nconst API = {\r\n    getUsers: async (currentPage: number, pageSize: number) => {\r\n\r\n        return await axiosInstance.get(`users?page=${currentPage}&count=${pageSize}`).then(res => res.data)\r\n\r\n    },\r\n\r\n    Unfollow: async (UserId: number) => {\r\n        return await axiosInstance.delete(`follow/${UserId}`).then(res => res.data)\r\n    },\r\n    Follow: async (UserId: number, UserData: {}) => {\r\n        return await axiosInstance.post(`follow/${UserId}`, UserData).then(res => res.data)\r\n    },\r\n    authMe: async () => {\r\n        return await axiosInstance.get(`auth/me`).then(res => res.data)\r\n    },\r\n    login: (email:string, password:string, rememberMy:boolean) => {\r\n        return axiosInstance.post('auth/login', {email, password, rememberMy}).then(res => res)\r\n    },\r\n    logOut: () => {\r\n        return axiosInstance.delete('auth/login').then(res => res)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    setUsersProfile:  (userId: string) => {\r\n        return  axiosInstance.get(`profile/${userId}`).then(res => res.data)\r\n    },\r\n    getStatus: (userId: string) => {\r\n        return axiosInstance.get(`profile/status/${userId}`).then(res => res)\r\n    },\r\n    updateStatus: (status: string) => {\r\n        return axiosInstance.put('profile/status', {status: status}).then(res => res)\r\n    }\r\n}\r\n\r\n\r\nexport default API;","import API from \"../API/API\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"./reduxStore\";\r\n\r\nexport enum ACTION_TYPE {\r\n    FOLLOW = 'SOC/FOLLOW',\r\n    UNFOLLOW = 'SOC/UNFOLLOW',\r\n    SET_USERS = 'SOC/SET_USERS',\r\n    SET_TOTAL_COUNT = 'SOC/SET_TOTAL_COUNT',\r\n    SET_CURRENT_PAGE = 'SOC/SET_CURRENT_PAGE',\r\n    TOGGLE_LOADING = 'SOC/TOGGLE_LOADING',\r\n    TOGGLE_FOLLOW_PROGRESS = 'SOC/TOGGLE_FOLLOW_PROGRESS'\r\n}\r\n\r\nexport type usersACTypes =\r\n    ReturnType<typeof unFollow>\r\n    | ReturnType<typeof follow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setTotalCount>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof toggleLoading>\r\n    | ReturnType<typeof toggleFollowProgress>\r\n\r\n\r\ntype FollowUsersACType = {\r\n    type: ACTION_TYPE.FOLLOW\r\n    userId: number\r\n}\r\ntype UnFollowUsersACType = {\r\n    type: ACTION_TYPE.UNFOLLOW\r\n    userId: number\r\n}\r\ntype SetUsersACType = {\r\n    type: ACTION_TYPE.SET_USERS\r\n    users: Array<UsersType>\r\n}\r\ntype SetTotalCountACType = {\r\n    type: ACTION_TYPE.SET_TOTAL_COUNT\r\n    totalCount: number\r\n}\r\ntype SetCurrentPageACType = {\r\n    type: ACTION_TYPE.SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\ntype ToggleLoadingACType = {\r\n    type: ACTION_TYPE.TOGGLE_LOADING\r\n    loading: boolean\r\n}\r\ntype ToggleFollowProgressACType = {\r\n    type: ACTION_TYPE.TOGGLE_FOLLOW_PROGRESS\r\n\r\n    userId:number\r\n    loading: boolean\r\n}\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 8,\r\n    totalUsersCount: 50,\r\n    currentPage: 1,\r\n    loading: true,\r\n    followIsProgress: []\r\n}\r\n\r\nexport type UsersPageType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    loading: boolean\r\n    followIsProgress: Array<number>\r\n}\r\nexport type UsersType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName?: string\r\n    photos: {\r\n        small?: string\r\n        large?: string\r\n    }\r\n    status: string\r\n    \"followed\": boolean\r\n    location: {\r\n        city: string\r\n        country: string\r\n    }\r\n}\r\n\r\n\r\nconst usersReducer = (state: UsersPageType = initialState, action: usersACTypes): UsersPageType => {\r\n\r\n    switch (action.type) {\r\n        case ACTION_TYPE.FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => user.id !== action.userId\r\n                    ? user\r\n                    : {...user, followed: true})\r\n            }\r\n        case ACTION_TYPE.UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => user.id !== action.userId\r\n                    ? user\r\n                    : {...user, followed: false})\r\n            }\r\n        case ACTION_TYPE.SET_USERS:\r\n            return {...state, users: [...action.users]}\r\n        case ACTION_TYPE.SET_TOTAL_COUNT:\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        case ACTION_TYPE.SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case ACTION_TYPE.TOGGLE_LOADING:\r\n            return {...state, loading: action.loading}\r\n        case ACTION_TYPE.TOGGLE_FOLLOW_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followIsProgress: action.loading\r\n                    ? [...state.followIsProgress, action.userId]\r\n                    : state.followIsProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\nexport const follow = (userId: number): FollowUsersACType => ({type: ACTION_TYPE.FOLLOW, userId})\r\nexport const unFollow = (userId: number): UnFollowUsersACType => ({type: ACTION_TYPE.UNFOLLOW, userId})\r\nexport const setUsers = (users: Array<UsersType>): SetUsersACType => ({type: ACTION_TYPE.SET_USERS, users})\r\nexport const setTotalCount = (totalCount: number): SetTotalCountACType => ({\r\n    type: ACTION_TYPE.SET_TOTAL_COUNT,\r\n    totalCount\r\n})\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageACType => ({\r\n    type: ACTION_TYPE.SET_CURRENT_PAGE,\r\n    currentPage\r\n})\r\nexport const toggleLoading = (loading: boolean): ToggleLoadingACType => ({type: ACTION_TYPE.TOGGLE_LOADING, loading})\r\nexport const toggleFollowProgress = (userId:number, loading:boolean): ToggleFollowProgressACType => ({\r\n    type: ACTION_TYPE.TOGGLE_FOLLOW_PROGRESS,\r\n    userId,\r\n    loading\r\n})\r\n\r\ntype ThunkTypesUser  = ThunkAction<void, AppStateType, unknown, usersACTypes>\r\n export const getUsersThunkCreator = (pageSize:number, currentPage:number):ThunkTypesUser => (dispatch) => {\r\n     dispatch(toggleLoading(true))\r\n     dispatch(setCurrentPage(currentPage))\r\n\r\n    API.getUsers(currentPage, pageSize)\r\n        .then((res: any) => {\r\n            dispatch(setUsers(res.items))\r\n            dispatch(toggleLoading(false))\r\n            // this.props.setTotalCount(res.data.totalCount)\r\n\r\n        })\r\n}\r\n\r\nexport const followThunk = (userId:number):ThunkTypesUser => (dispatch) => {\r\n    dispatch(toggleFollowProgress(userId, true))\r\n    API.Follow(userId, {})\r\n        .then((res: any) => {\r\n            if(res.resultCode === 0){\r\n                dispatch(follow(userId))\r\n                dispatch(toggleFollowProgress( userId, false))\r\n            }\r\n\r\n        })\r\n}\r\nexport const unFollowThunk = (userId:number):ThunkTypesUser => (dispatch) => {\r\n    dispatch(toggleFollowProgress( userId, true))\r\n    API.Unfollow(userId)\r\n        .then((res:any) => {\r\n            if(res.resultCode === 0){\r\n                dispatch(unFollow(userId))\r\n                dispatch(toggleFollowProgress(userId, false))\r\n            }\r\n        })\r\n}\r\n\r\n\r\n\r\nexport default usersReducer;","import ProfileComponent from \"./ProfileComponent\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {\r\n    AddTask,\r\n    setProfileStatusThunk,\r\n    SetUserProfileThunk,\r\n    updateProfileStatusThunk\r\n} from \"../../redux/profileReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\nimport  {ComponentType} from \"react\";\r\n\r\nconst mapStateToProps = (state:AppStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isAuth: state.auth,\r\n        loading: state.profilePage.loading\r\n    }\r\n}\r\nexport type PropsProfileFromRedux = ConnectedProps<typeof connector>\r\nconst connector = connect(mapStateToProps, {\r\n    AddTask,\r\n    SetUserProfileThunk,\r\n    setProfileStatusThunk,\r\n    updateProfileStatusThunk\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n    connector,\r\n    withRouter,\r\n    // RedirectHoc\r\n)(ProfileComponent)\r\n\r\n","import API from \"../API/API\";\r\nimport {AppThunk} from \"./reduxStore\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nexport enum ACTION_TYPE {\r\n    SET_USER_DATA = 'SOC/AUTH/SET_USER_DATA',\r\n}\r\n\r\nexport type authACTypes =\r\n    ReturnType<typeof SetUserData>\r\n\r\n\r\nconst initialState = {\r\n    resultCode: null,\r\n    messages: [],\r\n    data: {\r\n        id: null,\r\n        email: '',\r\n        login: ''\r\n    },\r\n    isAuth: false\r\n}\r\nexport type DataUserType = {\r\n    id: number | null\r\n    email: string\r\n    login: string\r\n\r\n}\r\nexport type AuthType = {\r\n    resultCode: number | null\r\n    messages: Array<string> | []\r\n    data: DataUserType\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nconst AuthReducer = (state: AuthType = initialState, action: authACTypes) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.SET_USER_DATA:\r\n\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...action.data\r\n                },\r\n                isAuth: action.isAuth\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const SetUserData = (data: DataUserType, isAuth: boolean) => ({\r\n    type: ACTION_TYPE.SET_USER_DATA,\r\n    data,\r\n    isAuth\r\n})\r\n\r\nexport const SetUserDataThunk = (isAuth: boolean): AppThunk => (dispatch) => {\r\n    return API.authMe().then((res: any) => {\r\n        if (res.resultCode === 0) {\r\n            dispatch(SetUserData(res.data, isAuth))\r\n        }\r\n    })\r\n}\r\nexport const LoginRe = (email: string, password: string, rememberMy: boolean): AppThunk => (dispatch) => {\r\n\r\n    API.login(email, password, rememberMy).then(res => {\r\n        if (res.data.resultCode === 0) {\r\n\r\n            dispatch(SetUserDataThunk(true))\r\n        } else {\r\n\r\n            let action = stopSubmit('login', {email: 'Email is wrong'})\r\n\r\n            dispatch(action)\r\n        }\r\n    })\r\n}\r\nexport const LogOut = (): AppThunk => (dispatch) => {\r\n    API.logOut().then(res => {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(SetUserData(res.data, false))\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport default AuthReducer;\r\n\r\n","export default __webpack_public_path__ + \"static/media/react-javascript-library-redux-user-interface-tesseract.61a13b87.jpg\";","import React from 'react';\r\nimport {UsersType} from \"../../redux/usersReducer\";\r\nimport style from './Users.module.scss'\r\nimport avatar from '../../assets/image/react-javascript-library-redux-user-interface-tesseract.jpg'\r\n\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PropsUserFromRedux} from \"./UsersContainer\";\r\n\r\n\r\nexport interface usersPagesType extends PropsUserFromRedux {\r\n    onPageChanged?: (pageNum: number) => void\r\n}\r\n\r\n\r\nconst Users = (props: usersPagesType) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n            <div className={style.list_users}>\r\n                {\r\n                    pages.map((p: number, inx) => {\r\n                        return <span key={p + inx + Math.random()}\r\n                                     className={props.currentPage === p ? style.selectPage : ''}\r\n                                     onClick={() => {\r\n                                         props.onPageChanged && props.onPageChanged(p)\r\n                                     }}>{p}</span>\r\n                    })\r\n                }\r\n\r\n            </div>\r\n            {\r\n                props.users.map((user: UsersType) => {\r\n                    return (\r\n                        <div className={style.Users} key={user.id}>\r\n                            <div className={style.Users_item}>\r\n                                <div className={style.img_wrapper}>\r\n                                    <div className={style.img}>\r\n                                        <NavLink to={'/profile/' + user.id}>\r\n                                            <img\r\n                                                src={user.photos.small !== null ? user.photos.small : avatar}\r\n                                                alt=\"ava\"/>\r\n                                        </NavLink>\r\n                                    </div>\r\n                                    <div className={style.follow}>\r\n                                        {\r\n                                            user.followed\r\n                                                ? <button\r\n                                                    disabled={props.followIsProgress.some(id => id === user.id)}\r\n                                                    onClick={() => props.unFollowThunk(user.id)}\r\n                                                >Unfollow</button>\r\n                                                : <button\r\n                                                    disabled={props.followIsProgress.some(id => id === user.id)}\r\n                                                    onClick={() => props.followThunk(user.id)}\r\n                                                >Follow</button>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={style.mes_wrapper}>\r\n                                    <div className={style.name_wrapper}>\r\n                                        <div className={style.name}>{user.name}</div>\r\n                                        <div className={style.status}>{user.status}</div>\r\n                                    </div>\r\n                                    <div className={style.city_wrapper}>\r\n                                        <div className={style.country}>{}</div>\r\n                                        <div className={style.city}>{}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Users;","\r\n\r\nimport {AppStateType} from \"./reduxStore\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state:AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state:AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state:AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state:AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getLoading = (state:AppStateType) => {\r\n    return state.usersPage.loading\r\n}\r\nexport const getFollowIsProgress= (state:AppStateType) => {\r\n    return state.usersPage.followIsProgress\r\n}\r\n\r\nexport const getUserSuper = createSelector(getUsers,  (users) => {\r\n\r\n    return users.filter(u => true)\r\n})\r\n","import {connect, ConnectedProps} from \"react-redux\";\r\nimport {followThunk, getUsersThunkCreator, unFollowThunk,} from \"../../redux/usersReducer\";\r\nimport React, {Component, ComponentType} from \"react\";\r\nimport Users from \"./Users\";\r\nimport Spinner from \"../UI/Loader/Spinner/Spinner\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport RedirectHoc from \"../../HOC/RedirectHoc\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getLoading,\r\n    getFollowIsProgress, getUserSuper\r\n} from \"../../redux/usersSelector\";\r\n\r\n\r\ninterface usersPagesContainerType extends PropsUserFromRedux {\r\n}\r\n\r\nclass UsersAPIComponent extends Component<usersPagesContainerType, any> {\r\n\r\n    componentDidMount() {\r\n        const {getUsers, pageSize, currentPage} = this.props\r\n        getUsers( pageSize, currentPage)\r\n    }\r\n\r\n    onPageChanged = (pageNum: number) => {\r\n        const {getUsers, pageSize} = this.props\r\n\r\n        getUsers( pageSize, pageNum)\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            users,\r\n            totalUsersCount,\r\n            pageSize,\r\n            currentPage,\r\n            loading,\r\n            followIsProgress,\r\n\r\n            followThunk,\r\n            unFollowThunk\r\n        } = this.props\r\n        return <>\r\n            {loading ? <Spinner/> : <Users\r\n                {...this.props}\r\n                users={users}\r\n                totalUsersCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                followIsProgress={followIsProgress}\r\n                loading={loading}\r\n                unFollowThunk={unFollowThunk}\r\n                followThunk={followThunk}\r\n            />}\r\n\r\n        </>\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: getUserSuper(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        loading: getLoading(state),\r\n        followIsProgress: getFollowIsProgress(state)\r\n    }\r\n}\r\nexport type PropsUserFromRedux = ConnectedProps<typeof connector>\r\nconst connector = connect(mapStateToProps, {\r\n    followThunk,\r\n    unFollowThunk,\r\n    getUsers:getUsersThunkCreator\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n    connector,\r\n    RedirectHoc\r\n)(UsersAPIComponent)","import {AppActionType, AppThunk} from \"./reduxStore\";\r\nimport {SetUserDataThunk} from \"./authReducer\";\r\n\r\n\r\nexport enum ACTION_TYPE {\r\n    SET_INITIALIZED = 'SOC/APP/SET_INITIALIZED',\r\n}\r\n\r\n\r\n\r\nconst initialState = {\r\n    initialized: false\r\n\r\n}\r\ntype AppInitialType = {\r\n    initialized:Boolean\r\n}\r\n\r\nexport const AppReducer = (state: AppInitialType = initialState, action: AppActionType):AppInitialType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const SetInitialized = () => ({\r\n    type: ACTION_TYPE.SET_INITIALIZED,\r\n})\r\n\r\nexport type InitializedTypeAc = ReturnType<typeof SetInitialized>\r\n\r\nexport const InitializeApp = (): AppThunk => (dispatch) => {\r\n    let result:any = dispatch(SetUserDataThunk(true))\r\n    console.log(result)\r\n    result.then(() => {\r\n        dispatch(SetInitialized())\r\n        console.log(result)\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport classes from './Header.module.css';\r\nimport {AuthType, LogOut} from \"../../redux/authReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {ExportOutlined}  from '@ant-design/icons';\r\ninterface HeaderTypes {\r\n    auth: AuthType\r\n}\r\n\r\nconst Header = (props: HeaderTypes) => {\r\n\r\n    const {isAuth, data,} = props.auth\r\n    const dispatch = useDispatch()\r\n    const logOutn = () => {\r\n        dispatch(LogOut())\r\n    }\r\n    return (\r\n\r\n        < >\r\n            {isAuth\r\n                ? <div className={classes.login_block}>\r\n                    <div className={classes.login_name}>{data.login}</div>\r\n                    <div className={classes.log_out}><NavLink to={'/'} onClick={logOutn}> <ExportOutlined /></NavLink></div>\r\n                </div>\r\n                : <NavLink to={'/login'}>Login </NavLink>}\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport default Header","import React, {Component} from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport Header from \"./Header\";\r\nimport {SetUserDataThunk} from \"../../redux/authReducer\";\r\n\r\n\r\nclass HeaderContainer extends Component<PropsHeaderFromRedux, any>{\r\n\r\n\r\n    render() {\r\n        return (\r\n                <Header auth={this.props.auth}/>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state:AppStateType) => {\r\n    return {\r\n        auth: state.auth,\r\n    }\r\n}\r\n\r\nexport type PropsHeaderFromRedux = ConnectedProps<typeof connector>\r\nconst connector =connect(mapStateToProps, {\r\n    SetUserDataThunk\r\n})\r\n\r\nexport default connector(HeaderContainer)\r\n","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormControls/FormContrrols\";\r\nimport {requiredField} from \"../../utils/Validators/Validator\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LoginRe} from \"../../redux/authReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {Redirect} from \"react-router\";\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    error?: any\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field name=\"email\"\r\n                        type=\"text\" component={Input} placeholder=\"Username\" validate={[requiredField]}/></div>\r\n            <div><Field component={Input} placeholder={'Password'} name=\"password\" validate={[requiredField]}/></div>\r\n            <div><Field type=\"checkbox\" component={Input} name={'rememberMe'}/> remember My</div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = () => {\r\n    const {auth: {isAuth}} = useSelector((state: AppStateType) => state)\r\n\r\n    const dispatch = useDispatch()\r\n    const onSubmit = (formData: FormDataType) => {\r\n        dispatch(LoginRe(formData.email, formData.password, formData.rememberMe))\r\n\r\n    }\r\n    if (isAuth) return <Redirect to={'/profile'}/>\r\n    return (\r\n\r\n        <div>\r\n\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Login;","import React, {ComponentType} from 'react';\r\n\r\nimport {Link, Route, Switch} from 'react-router-dom';\r\nimport DialogContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport ProfileComponentContainer from \"./components/Profile/ProfileComponentContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from './components/Login/Login';\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppStateType} from \"./redux/reduxStore\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router\";\r\nimport {InitializeApp} from \"./redux/appReducer\";\r\nimport Spinner from \"./components/UI/Loader/Spinner/Spinner\";\r\nimport './App.css';\r\nimport 'antd/dist/antd.css'\r\n\r\nimport {Layout, Menu} from 'antd';\r\nimport {CommentOutlined, MenuFoldOutlined, MenuUnfoldOutlined, TeamOutlined, UserOutlined,} from '@ant-design/icons';\r\n\r\n\r\nconst {Header, Sider, Content} = Layout;\r\n\r\nclass App extends React.Component<PropsHeaderFromRedux, any> {\r\n    componentDidMount() {\r\n        this.props.InitializeApp && this.props.InitializeApp()\r\n\r\n    }\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    toggle = () => {\r\n\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        if(!this.props.initialized) {\r\n            return <Spinner/>\r\n        }\r\n\r\n\r\n        return (\r\n            <Layout>\r\n                <Sider trigger={<MenuFoldOutlined onClick={() => this.toggle()}/>} collapsible collapsed={this.state.collapsed}>\r\n                    <div className=\"img_wrapper\">\r\n                        <Link to='/profile'><img alt='aca' className={'img_header'}\r\n                                                    src='https://dcassetcdn.com/design_img/718794/445771/445771_4394919_718794_image.png'/>Social net</Link>\r\n                    </div>\r\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']} >\r\n                        <Menu.Item key=\"1\" icon={<UserOutlined/>}>\r\n                            <Link to='/profile'>Profile</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\" icon={<CommentOutlined />}>\r\n                            <Link to='/dialogs/'>Dialog</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"3\" icon={<TeamOutlined />}>\r\n                            <Link to='/users'>Users</Link>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout className=\"site-layout\">\r\n                    <Header className=\"site-layout-background header_app\" style={{background: '#f0f2f5'}}>\r\n                        {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n                            className: 'trigger',\r\n                            onClick: this.toggle,\r\n                        })\r\n\r\n                        }\r\n                        <HeaderContainer/>\r\n                    </Header>\r\n                    <Content\r\n                        className=\"site-layout-background\"\r\n                        style={{\r\n                            margin: '24px 16px',\r\n                            padding: 24,\r\n                            minHeight: \"80vh\",\r\n                        }}\r\n                    >\r\n                        <Switch>\r\n                            <Route path='/profile/:userId?' render={() => <ProfileComponentContainer\r\n                            />}/>\r\n                            <Route path='/dialogs/:id?' exact render={() =>\r\n                                <DialogContainer/>\r\n                            }/>\r\n                            <Route path='/users' exact render={() =>\r\n                                <UsersContainer/>\r\n                            }/>\r\n                            <Route path='/login' exact render={() =>\r\n                                <Login/>\r\n                            }/>\r\n                        </Switch>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n\r\n        // return (\r\n        //     <Router>\r\n        //         <div className={s.app_wrapper}>\r\n        //             <HeaderContainer/>\r\n        //             <Navbar/>\r\n        //             <div className={s.content}>\r\n        //                 <Switch>\r\n        //\r\n        //                     <Route path='/profile/:userId?' render={() => <ProfileComponentContainer\r\n        //                     />}/>\r\n        //                     <Route path='/dialogs/:id?' exact render={() =>\r\n        //                         <DialogContainer/>\r\n        //                     }/>\r\n        //                     <Route path='/users' exact render={() =>\r\n        //                         <UsersContainer/>\r\n        //                     }/>\r\n        //                     <Route path='/login' exact render={() =>\r\n        //                         <Login/>\r\n        //                     }/>\r\n        //                 </Switch>\r\n        //             </div>\r\n        //         </div>\r\n        //     </Router>\r\n        // );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\nexport type PropsHeaderFromRedux = ConnectedProps<typeof connector>\r\nconst connector = connect(mapStateToProps, {\r\n    InitializeApp\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n    connector,\r\n    withRouter\r\n)(App)\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport profileReducer, { ProfileACTypes } from './profileReducer';\r\nimport dialogReducer, {ActionType} from './dialogReducer';\r\nimport usersReducer, { usersACTypes } from \"./usersReducer\";\r\nimport AuthReducer, {authACTypes} from \"./authReducer\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {FormAction, reducer as formReducer} from 'redux-form'\r\nimport {AppReducer, InitializedTypeAc} from './appReducer';\r\n\r\nexport type  RootReduceType = typeof reducers;\r\nexport type AppStateType = ReturnType<RootReduceType>\r\nconst reducers = combineReducers({\r\n    profilePage:profileReducer,\r\n    dialogPage:dialogReducer,\r\n    usersPage:usersReducer,\r\n    auth: AuthReducer,\r\n    form: formReducer,\r\n    app: AppReducer\r\n});\r\n\r\nconst store:any = createStore(reducers, applyMiddleware(thunk));\r\nexport type AppActionType = ProfileACTypes | ActionType | authACTypes | usersACTypes | FormAction | InitializedTypeAc\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n    ReturnType,\r\n    AppStateType,\r\n    unknown,\r\n    AppActionType\r\n    >\r\n//@ts-ignore\r\nwindow.store = store\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/reduxStore';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__2d6KM\",\"title\":\"MyPosts_title__kOzA7\",\"content\":\"MyPosts_content__3W93T\",\"error\":\"MyPosts_error__wyIjM\",\"input\":\"MyPosts_input__1PS19\",\"head\":\"MyPosts_head__SlPhj\",\"btnForm\":\"MyPosts_btnForm__3-Uoc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__3DFPZ\",\"line\":\"Dialogs_line__2Jz-2\",\"textarea_head\":\"Dialogs_textarea_head__31C41\",\"textarea\":\"Dialogs_textarea__2IGEV\",\"btn_dialog\":\"Dialogs_btn_dialog__3EOTv\",\"title_form\":\"Dialogs_title_form__1KC3r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"ChatMessage_wrap__1DA27\",\"message\":\"ChatMessage_message__2fsJR\",\"person_img\":\"ChatMessage_person_img__3iCJP\",\"person\":\"ChatMessage_person__vHDMl\",\"person_title\":\"ChatMessage_person_title__1mL7w\",\"text\":\"ChatMessage_text__zYD5d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"UsersDialog_item__-5p4Z\",\"names\":\"UsersDialog_names__3L9cf\",\"avatar\":\"UsersDialog_avatar__1p6JF\"};"],"sourceRoot":""}